// http://www.example.com:80/path/to/myfile.html?key1=value1&key2=value2#SomewhereInTheDocument
// http://www.example.com:80/pages/:pageId/sections/:sectionId/?filter=:filter&search=:search&timestamp=:timestamp#:hash
// http://www.example.com:80/#/pages/:pageId/sections/:sectionId/?filter=:filter&search=:search&timestamp=:timestamp#:hash

interface RouteArgs {
  pageId: string
  sectionId: string
  filter: string
  search: string
  timestamp: string
  hash: string
}

interface RouteParams {
  accountId: number;
  foo: string;
  bar: Date;
  q: string
}

type RouteParamKeys = keyof RouteParams;

function prop<T, K extends keyof T>(obj: T, key: K) {
  return obj[key];
}

const params = {
  id: 1,
  text: 'Buy milk',
  due: new Date(2016, 11, 31),
  queryParams: {
    q: 'hello'
  }
};

const id = prop(params, 'id');      // number
const text = prop(params, 'text');  // string
const due = prop(params, 'due');
const q = prop(params, 'queryParams').q

export abstract class Page<T> {
  routeParams!: T
}

function route(options: { path: string }) {
  return (Route: Page<any>) => {
    return Route
  }
}

export class IndexPage extends Page<RouteParams> {
  constructor() {
    super()
    console.log(this.routeParams.foo)
  }
}